export const colorPalette = {
	primary: {
		50: "#F7F9FB",
		100: "#EFF3F8",
		200: "#DEE6F1",
		300: "#BFCFDF",
		400: "#9FB9CD",
		500: "#7FA2BB",
		600: "#6A8BA3",
		700: "#55748C",
		800: "#405C74",
		900: "#2A445C",
	},
	secondary: {
		50: "#F9F6F2",
		100: "#F1EDE8",
		200: "#E6E0D8",
		300: "#D2C8BD",
		400: "#BFB2A3",
		500: "#A59985",
		600: "#8C7F6B",
		700: "#665C4E",
		800: "#4D4639",
		900: "#332F26",
	},
	neutral: {
		0: "#FFFCF8",
		50: "#F9F6F2",
		100: "#F1EDE8",
		200: "#E6E0D8",
		300: "#D2C8BD",
		400: "#BFB2A3",
		500: "#A59985",
		600: "#8C7F6B",
		700: "#665C4E",
		800: "#4D4639",
		900: "#332F26",
		950: "#1F1C17",
		1000: "#000000",
	},
	accent: {
		sage: "#E2E5DC",
		peach: "#F1E5DC",
		lavender: "#E2E1E5",
		coral: "#EBE1DC",
		mint: "#E0E5E2",
		cream: "#F7F4ED",
		sky: "#E2E7EB",
		rose: "#E5E1E2",
	},
	semantic: {
		success: "#4CAF50",
		warning: "#FFC107",
		info: "#2196F3",
		error: "#E53935",
	},
};

export const getRgba = (hex: string, alpha: number): string => {
	const r = Number.parseInt(hex.slice(1, 3), 16);
	const g = Number.parseInt(hex.slice(3, 5), 16);
	const b = Number.parseInt(hex.slice(5, 7), 16);
	return `rgba(${r}, ${g}, ${b}, ${alpha})`;
};

export const colors = {
	light: {
		primary: "#7A654A",
		primaryDark: "#5E4C38",
		primaryLight: "rgba(122, 101, 74, 0.15)",
		secondary: colorPalette.secondary[600],
		secondaryLight: getRgba(colorPalette.secondary[300], 0.2),
		background: colorPalette.neutral[50],
		backgroundAlt: colorPalette.neutral[100],
		card: colorPalette.neutral[0],
		cardAlt: colorPalette.neutral[100],
		text: colorPalette.neutral[800],
		textSecondary: colorPalette.neutral[600],
		textMuted: colorPalette.neutral[400],
		success: colorPalette.semantic.success,
		warning: colorPalette.semantic.warning,
		info: colorPalette.semantic.info,
		error: colorPalette.semantic.error,
		divider: getRgba(colorPalette.neutral[300], 0.5),
		overlay: getRgba(colorPalette.neutral[950], 0.08),
		overlayLight: getRgba(colorPalette.neutral[950], 0.08),
		overlayMedium: getRgba(colorPalette.neutral[950], 0.15),
		overlayDark: getRgba(colorPalette.neutral[950], 0.25),
		shadow: getRgba(colorPalette.neutral[900], 0.06),
		tabBar: colorPalette.neutral[50],
		tabIconDefault: colorPalette.neutral[500],
		tabIconSelected: colorPalette.primary[600],
		animationErrorShake: getRgba(colorPalette.semantic.error, 0.1),
		accentSage: "#DEE2D5",
		accentPeach: "#F0E0D0",
		accentLavender: "#E0DEE5",
		accentCoral: "#E8D8D0",
		accentMint: "#D8E5DC",
		accentCream: "#F0EBE0",
		accentSky: "#DEE5EB",
		accentRose: "#E8DFE0",
	} as const,
	dark: {
		primary: colorPalette.primary[400],
		primaryDark: colorPalette.primary[500],
		primaryLight: getRgba(colorPalette.primary[400], 0.15),
		secondary: colorPalette.secondary[400],
		secondaryLight: getRgba(colorPalette.secondary[400], 0.15),
		background: "#2A2A30",
		backgroundAlt: "#323238",
		card: "#2E2E34",
		cardAlt: "#36363C",
		text: "#E6E0D8",
		textSecondary: "#C2B6A6",
		textMuted: "#A59985",
		success: colorPalette.semantic.success,
		warning: colorPalette.semantic.warning,
		info: colorPalette.semantic.info,
		error: colorPalette.semantic.error,
		divider: getRgba(colorPalette.neutral[0], 0.05),
		overlay: getRgba(colorPalette.neutral[950], 0.3),
		overlayLight: getRgba(colorPalette.neutral[950], 0.15),
		overlayMedium: getRgba(colorPalette.neutral[950], 0.2),
		overlayDark: getRgba(colorPalette.neutral[950], 0.3),
		shadow: getRgba(colorPalette.neutral[1000], 0.08),
		tabBar: "#2E2E34",
		tabIconDefault: colorPalette.neutral[500],
		tabIconSelected: colorPalette.primary[400],
		animationErrorShake: getRgba(colorPalette.semantic.error, 0.15),
		accentSage: getRgba(colorPalette.accent.sage, 0.15),
		accentPeach: getRgba(colorPalette.accent.peach, 0.15),
		accentLavender: getRgba(colorPalette.accent.lavender, 0.15),
		accentCoral: getRgba(colorPalette.accent.coral, 0.15),
		accentMint: getRgba(colorPalette.accent.mint, 0.15),
		accentCream: getRgba(colorPalette.accent.cream, 0.15),
		accentSky: getRgba(colorPalette.accent.sky, 0.15),
		accentRose: getRgba(colorPalette.accent.rose, 0.15),
	} as const,
};
